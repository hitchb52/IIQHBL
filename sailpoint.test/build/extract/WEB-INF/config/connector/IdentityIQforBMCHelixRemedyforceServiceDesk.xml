<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Application PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Application connector="sailpoint.connector.OpenConnectorAdapter" featuresString="DIRECT_PERMISSIONS, NO_AGGREGATION, PROVISIONING, UNLOCK, ENABLE, PASSWORD" name="IdentityIQ for BMC Helix Remedyforce Service Desk" type="BMC Helix Remedyforce SDIM">
  <Attributes>
    <Map>
      <entry key="connectorClass" value="openconnector.connector.servicedesk.ServiceDeskConnector" />
      <!-- Authentication  can be "SessionID" or "OAuth2". For SessionID configure url,username,password and token_url -->
      <entry key="authenticationType" value="SessionID" />
      <!-- url of BMC Helix Remedyforce ITSM portal -->
      <entry key="url" value="" />
      <entry key="username" value="" />
      <entry key="password" value="" />
      <!-- 'token_url can be https://login.salesforce.com/services/Soap/u/35.0/ for SessionID 
            and https://<remedyforce instance>/services/oauth2/token for Refresh token -->
      <entry key="token_url" value="" />
      <!-- Refresh Token Approach -->
      <entry key="client_id" value="" />
      <entry key="client_secret" value="" />
      <!-- Grant type value should be REFRESH_TOKEN for Oauth2 -->
      <entry key="grant_type" value="" />
      <entry key="refresh_token" value="" />
      <!-- Configure following variable values to provide maximum number of retries 
           and retry after threshold value allowed for both provisioning and check status operations -->
      <entry key="provisioningRateLimitRetryCount" value="5" />
      <entry key="provisioningRateLimitRetryAfterSeconds" value="30" />
      <entry key="checkStatusRateLimitRetryCount" value="5" />
      <entry key="checkStatusRateLimitRetryAfterSeconds" value="30" />
      <!--  Name of the BMC Remedyforce - Direct Application in IdentityIQ.
            It is used to determine Client ID in a plan initializer script.
            Empty value meaning plan initializer to determine a Link object based on type of the Remedyforce ITSM - Direct
            which is 'Remedyforce ITSM - Direct ', whereas nonempty value promotes plan initializer to 
            determine a Link object based on name of Remedyforce ITSM - Direct Application.
         -->
      <entry key="requesterSource" value="" />
      <!-- When 'multipleTicket' is 'true', a separate ticket will be created for each line item from 
	       the IdentityIQ access request.When false single ticket will be created against all line items from the IdentityIQ access request. -->
      <entry key="multipleTicket" value="false" />

      <!-- Duration for provisioningRequestExpiration -->
      <entry key="provisioningRequestExpiration" value="30" />

      <!-- When 'groupTicketBy' is 'Application' and 'multipleTicket' is true, then
           IdenityIQ access request line items from the same application will be moved to a single ticket.
         -->
      <entry key="groupTicketBy" value="Application" />
      <entry key="templateApplication" value="BMC Helix Remedyforce SDIM" />
      <!-- 'ticketType' can be serviceRequest -->
      <entry key="ticketType" value="serviceRequest" />
      <entry key="encrypted" value="client_secret,refresh_token,oauth_token_info" />
      <!-- Service Request -->
      <entry key="serviceRequest">
        <value>
          <Map>
            <entry key="checkStatus">
              <value>
                <Map>
                  <entry key="resource" value="/services/apexrest/BMCServiceDesk/1.0/ServiceRequest/SR$ticketId" />
                  <entry key="responseElement" value="$.Result.Fields[10].Value" />
                  <entry key="statusMap">
                    <value>
                      <Map>
                        <entry key="OPENED" value="Queued" />
                        <entry key="ACCEPTED" value="Queued" />
                        <entry key="ASSIGNED" value="Queued" />
                        <entry key="CHANGE PENDING" value="Queued" />
                        <entry key="CLOSEDMAIL" value="Committed" />
                        <entry key="IN PROGRESS" value="Queued" />
                        <entry key="RESOLVED" value="Committed" />
                        <entry key="WAITING FOR CUSTOMER" value="Queued" />
                        <entry key="CLOSED" value="Committed" />
                        <entry key="REJECTED" value="Failed" />
                        <entry key="CLOSED/NO CONTACT" value="Committed" />
                        <entry key="COMPLETED" value="Committed" />
                      </Map>
                    </value>
                  </entry>
                </Map>
              </value>
            </entry>
            <entry key="provision">
              <value>
                <Map>
                  <entry key="request">
                    <value>
                      <Map>
                        <entry key="Answers">
                          <value>
                            <!-- As many Map component can be added in the following list as per the request definition fullfilment inputs -->
                            <List>
                              <Map>
                                <!-- Add Request Definition input id -->
                                <entry key="QuestionId" value="REQUEST DEFINITION INPUT ID" />
                                <entry key="Values">
                                  <value>
                                    <List>
                                      <!-- Add Request Definition input id value based on the type of fulfilment input-->
                                      <String>IdentityIQ Access Request $!plan.arguments.identityRequestId</String>
                                    </List>
                                  </value>
                                </entry>
                              </Map>
                              <Map>
                                <!-- Add Request Definition input id -->
                                <entry key="QuestionId" value="REQUEST DEFINITION INPUT ID" />
                                <entry key="Values">
                                  <value>
                                    <List>
                                      <!-- Add Request Definition input id value based on the type of fulfilment input-->
                                      <String>#foreach($req in $plan.requests) #if($req.operation == 'Create') Create Account on application $req.resource #else For $req.id in application $req.resource #end #if($req.items) $newline  #foreach($item in $req.items) #if ($item.name == '*disabled*' &amp;&amp; $item.value == 'true') Disable Account. $newline #elseif ($item.name == '*disabled*' &amp;&amp; $item.value == 'false') Enable Account. $newline #elseif ($item.name == '*locked*' &amp;&amp; $item.value == 'false') Unlock Account. $newline #else $!item.Operation $item.name: $item.value $newline #end #end #else $newline $!req.Operation Account #end #end</String>
                                    </List>
                                  </value>
                                </entry>
                              </Map>
                              <Map>
                                <!-- Add Request Definition input id -->
                                <entry key="QuestionId" value="REQUEST DEFINITION INPUT ID" />
                                <entry key="Values">
                                  <value>
                                    <List>
                                      <!-- Add Request Definition input id value based on the type of fulfilment input-->
                                      <String>$!plan.arguments.opened_by</String>
                                    </List>
                                  </value>
                                </entry>
                              </Map>
                            </List>
                          </value>
                        </entry>
                        <entry key="Fields">
                          <value>
                            <List>
                              <Map>
                                <!-- Input Request Definition Template ID -->
                                <entry key="Name" value="requestDefinitionId" />
                                <entry key="Value" value="REQUEST DEFINTION ID" />
                              </Map>
                              <Map>
                                <!-- User ID -->
                                <entry key="Name" value="client" />
                                <entry key="Value" value="$!plan.arguments.requested_for" />
                              </Map>
                            </List>
                          </value>
                        </entry>
                      </Map>
                    </value>
                  </entry>
                  <entry key="requestRootElementType" value="JSONObject" />
                  <entry key="resource" value="/services/apexrest/BMCServiceDesk/1.0/ServiceRequest" />
                  <entry key="responseElement" value="$.Result.['Number']" />
                </Map>
              </value>
            </entry>
          </Map>
        </value>
      </entry>
    </Map>
  </Attributes>
  <ProvisioningConfig>
    <ManagedResource>
      <ApplicationRef>
        <Reference class="sailpoint.object.Application" name="Procurement_System" />
      </ApplicationRef>
    </ManagedResource>
    <PlanInitializerScript>
      <Source>
        <![CDATA[
        import sailpoint.object.Identity;
        import sailpoint.object.Link;
        import sailpoint.object.IntegrationConfig;
        import sailpoint.object.Application;
        import sailpoint.api.IdentityService;
        import org.apache.commons.logging.Log;
        import org.apache.commons.logging.LogFactory;
        import sailpoint.tools.GeneralException;
        /**
         * Fields
         */
        String applicationType = "RemedyForce";
        // Identity attribute on SailPoint/ UserID on BMC Remedyforce
        String userId = "Id";
        String requestedFor = null;
        String openedBy = null;
        
        /**
         * Get BMC Remedyforce Id for identity using application type 
         */
        private void getLinkByAppType(Identity identity) {
            if (identity == null) {
                return null;
            }
            List links = identity.getLinks();
            if (links != null ) {
                for (Link link : links) {
                    String appType = link.getApplication().getType();
                    if (appType != null && appType.equals(applicationType)) {
                        if(link.getAttribute(userId) != null) {
                            String userName = link.getAttribute(userId);
                            if(userName != null) {
                                openedBy = userName;
                                requestedFor = userName;
                                break;
                            }
                        }
                    }
                }
            }
        }
        
        /**
         * Get BMC Remedyforce Id for Identity using application name
         */
        private void getLinkByAppName(Identity identity, String requesterSource) {
            if (identity == null) {
                return null;
            }
            if (requesterSource != null) {
                Application app = context.getObjectByName(Application.class, requesterSource);
                IdentityService identService = new IdentityService(context);
                List links = identService.getLinks(identity, app);
                Link link = null;
                if (links != null && links.size() > 0) {
                    link = links.get(0);
                }
                if (link != null) {
                    String userName = (String) link.getAttribute(userId);
                    if (userName != null) {
                        openedBy = userName;
                        requestedFor = userName;
                    }
                }
            }
        }
        ////////////////////////////////////////////////////////////////
        // Main
        ////////////////////////////////////////////////////////////////
        Log log = LogFactory.getLog("openconnector.connector.servicedesk.ServiceDeskConnector");
        if (plan == void || plan == null) {
            log.error("BMC Remedyforce x ITSM SDIM - Plan initializer script - Plan is null.");
            throw new GeneralException("BMC Remedyforce ITSM SDIM  - Plan initializer script - Plan is null.");
        }
        Map arguments = (Map)plan.getArguments();
        List requesterList = plan.getRequesters();
        Identity requester = null;
        if (requesterList != null) {
            requester = requesterList.get(0);
            if (requester != null && requester.getName() != null) {
                requester = context.getObjectByName(Identity.class, requester.getName());
            }
        }
        String appName = integration.getName();
        if (appName != null) {
            Application appObject = context.getObjectByName(Application.class, appName);
            requesterSource = appObject.getAttributeValue("requesterSource");
        }
        if (requesterSource != null) {
            getLinkByAppName(identity, requesterSource);
            
        } else {
            getLinkByAppType(identity);
        }

        if (requestedFor != null) {
            arguments.put("requested_for", requestedFor);
        }
        if (openedBy != null) {
            arguments.put("opened_by", openedBy);
        }
        ]]>
       </Source>
     </PlanInitializerScript>
  </ProvisioningConfig>
</Application>
